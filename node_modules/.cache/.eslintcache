[{"C:\\Users\\shiva\\OneDrive\\Documents\\GitHub\\projectpals_frontend\\paartnup\\src\\index.js":"1","C:\\Users\\shiva\\OneDrive\\Documents\\GitHub\\projectpals_frontend\\paartnup\\src\\reportWebVitals.js":"2","C:\\Users\\shiva\\OneDrive\\Documents\\GitHub\\projectpals_frontend\\paartnup\\src\\components\\App.js":"3","C:\\Users\\shiva\\OneDrive\\Documents\\GitHub\\projectpals_frontend\\paartnup\\src\\components\\Home.js":"4","C:\\Users\\shiva\\OneDrive\\Documents\\GitHub\\projectpals_frontend\\paartnup\\src\\components\\Navbar.js":"5","C:\\Users\\shiva\\OneDrive\\Documents\\GitHub\\projectpals_frontend\\paartnup\\src\\components\\Chatapp.js":"6","C:\\Users\\shiva\\OneDrive\\Documents\\GitHub\\projectpals_frontend\\paartnup\\src\\components\\Post.js":"7","C:\\Users\\shiva\\OneDrive\\Documents\\GitHub\\projectpals_frontend\\paartnup\\src\\components\\Alert.js":"8","C:\\Users\\shiva\\OneDrive\\Documents\\GitHub\\projectpals_frontend\\paartnup\\src\\components\\Login.js":"9","C:\\Users\\shiva\\OneDrive\\Documents\\GitHub\\projectpals_frontend\\paartnup\\src\\components\\About.js":"10","C:\\Users\\shiva\\OneDrive\\Documents\\GitHub\\projectpals_frontend\\paartnup\\src\\components\\Signup.js":"11","C:\\Users\\shiva\\OneDrive\\Documents\\GitHub\\projectpals_frontend\\paartnup\\src\\components\\Profile.js":"12","C:\\Users\\shiva\\OneDrive\\Documents\\GitHub\\projectpals_frontend\\paartnup\\src\\components\\Error.js":"13","C:\\Users\\shiva\\OneDrive\\Documents\\GitHub\\projectpals_frontend\\paartnup\\src\\components\\Searchmodal.js":"14","C:\\Users\\shiva\\OneDrive\\Documents\\GitHub\\projectpals_frontend\\paartnup\\src\\components\\Chats.js":"15","C:\\Users\\shiva\\OneDrive\\Documents\\GitHub\\projectpals_frontend\\paartnup\\src\\components\\Postitem.js":"16","C:\\Users\\shiva\\OneDrive\\Documents\\GitHub\\projectpals_frontend\\paartnup\\src\\components\\College.js":"17","C:\\Users\\shiva\\OneDrive\\Documents\\GitHub\\projectpals_frontend\\paartnup\\src\\components\\Messanger.js":"18","C:\\Users\\shiva\\OneDrive\\Documents\\GitHub\\projectpals_frontend\\paartnup\\src\\components\\Loginform.js":"19","C:\\Users\\shiva\\OneDrive\\Documents\\GitHub\\projectpals_frontend\\paartnup\\src\\components\\Form.js":"20","C:\\Users\\shiva\\OneDrive\\Documents\\GitHub\\projectpals_frontend\\paartnup\\src\\components\\Otp.js":"21","C:\\Users\\shiva\\OneDrive\\Documents\\GitHub\\projectpals_frontend\\paartnup\\src\\components\\Studentcollege.js":"22","C:\\Users\\shiva\\OneDrive\\Documents\\GitHub\\projectpals_frontend\\paartnup\\src\\components\\Userpost.js":"23","C:\\Users\\shiva\\OneDrive\\Documents\\GitHub\\projectpals_frontend\\paartnup\\src\\components\\Message.js":"24","C:\\Users\\shiva\\OneDrive\\Documents\\GitHub\\projectpals_frontend\\paartnup\\src\\components\\Messagecomp.js":"25"},{"size":653,"mtime":1726140543736,"results":"26","hashOfConfig":"27"},{"size":375,"mtime":1725385936653,"results":"28","hashOfConfig":"27"},{"size":2034,"mtime":1726147625161,"results":"29","hashOfConfig":"27"},{"size":1112,"mtime":1726147625168,"results":"30","hashOfConfig":"27"},{"size":5154,"mtime":1726147625173,"results":"31","hashOfConfig":"27"},{"size":795,"mtime":1726147625162,"results":"32","hashOfConfig":"27"},{"size":5127,"mtime":1726147625178,"results":"33","hashOfConfig":"27"},{"size":437,"mtime":1725385936497,"results":"34","hashOfConfig":"27"},{"size":891,"mtime":1725636118066,"results":"35","hashOfConfig":"27"},{"size":1377,"mtime":1725385936497,"results":"36","hashOfConfig":"27"},{"size":1950,"mtime":1725385936512,"results":"37","hashOfConfig":"27"},{"size":3764,"mtime":1726147625183,"results":"38","hashOfConfig":"27"},{"size":539,"mtime":1725385936512,"results":"39","hashOfConfig":"27"},{"size":1055,"mtime":1726147625185,"results":"40","hashOfConfig":"27"},{"size":3795,"mtime":1726147625163,"results":"41","hashOfConfig":"27"},{"size":1429,"mtime":1726147625179,"results":"42","hashOfConfig":"27"},{"size":170,"mtime":1725385936512,"results":"43","hashOfConfig":"27"},{"size":496,"mtime":1726143429345,"results":"44","hashOfConfig":"27"},{"size":2886,"mtime":1726147625169,"results":"45","hashOfConfig":"27"},{"size":4268,"mtime":1726147625164,"results":"46","hashOfConfig":"27"},{"size":2095,"mtime":1726147625175,"results":"47","hashOfConfig":"27"},{"size":1078,"mtime":1725385936512,"results":"48","hashOfConfig":"27"},{"size":1503,"mtime":1726147625189,"results":"49","hashOfConfig":"27"},{"size":636,"mtime":1726147625171,"results":"50","hashOfConfig":"27"},{"size":280,"mtime":1725385936512,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jzinww",{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"C:\\Users\\shiva\\OneDrive\\Documents\\GitHub\\projectpals_frontend\\paartnup\\src\\index.js",[],[],"C:\\Users\\shiva\\OneDrive\\Documents\\GitHub\\projectpals_frontend\\paartnup\\src\\reportWebVitals.js",[],[],[],"C:\\Users\\shiva\\OneDrive\\Documents\\GitHub\\projectpals_frontend\\paartnup\\src\\components\\App.js",["132","133"],[],"C:\\Users\\shiva\\OneDrive\\Documents\\GitHub\\projectpals_frontend\\paartnup\\src\\components\\Home.js",[],[],"C:\\Users\\shiva\\OneDrive\\Documents\\GitHub\\projectpals_frontend\\paartnup\\src\\components\\Navbar.js",["134","135"],[],"import React, { useEffect, useState } from 'react';\r\nimport style from './style/Navbar.css';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport realimage from './style/PartnurUp.png';\r\nimport searchbtn from './style/search-interface-symbol.png';\r\nimport { Link } from 'react-router-dom';\r\nimport Searchmodal from './Searchmodal';\r\n\r\nconst Navbar = () => {\r\n    let navigate = useNavigate();\r\n    const logout = () => {\r\n        sessionStorage.clear();\r\n        navigate('/');\r\n    };\r\n\r\n    let location = useLocation();\r\n    const [modalResult, setModalResult] = useState(true);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const token = sessionStorage.getItem('token');\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                setLoading(true);\r\n\r\n                const response = await fetch(`http://adarsh826.pythonanywhere.com/api/accounts/search/${searchTerm}`, {\r\n                    method: 'GET',\r\n                    headers: { 'Authorization': `Bearer ${token}` }\r\n                });\r\n                const data = await response.json();\r\n\r\n                if (Array.isArray(data) && data.length > 0) {\r\n                    setSearchResults(data);\r\n                    console.log(data)\r\n                    setModalResult(true);\r\n                } else {\r\n                    setSearchResults([]);\r\n                    setModalResult(false);\r\n                }\r\n\r\n                if(setModalResult){\r\n                    window.addEventListener('click',()=>{\r\n                        setModalResult(false);\r\n                    })\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching data:', error);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        if (searchTerm.trim() !== '') {\r\n            fetchData();\r\n            // console.log(fetchData());\r\n        } else {\r\n            setSearchResults([]);\r\n            setModalResult(false);\r\n        }\r\n    }, [searchTerm, token]);\r\n\r\n    const handleSearch = (e) => {\r\n        setSearchTerm(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className='nav-main-container' style={location.pathname === '/' || location.pathname === '/paartnup' || location.pathname === '/post' || location.pathname === '/user-profile' ? style : { display: 'none' }} >\r\n            <div className=\"nav-first-container\">\r\n                <ul>\r\n                    <img src={realimage} id='nav-logo' width={'50vw'} alt=\"an 3d art view\" />\r\n                    <li id='Logo'>\r\n                        Project Pals\r\n                    </li>\r\n                    <li>\r\n                        <div className=\"nav-search\">\r\n                            <input type=\"text\" placeholder='Search... ' value={searchTerm} onChange={handleSearch}/>\r\n                            <img src={searchbtn} alt=\"button for searching\" />\r\n                        </div>\r\n                    </li>\r\n                    <li>\r\n\r\n                    </li>\r\n                    \r\n                    \r\n                    <li className= 'nav-list'>\r\n                        <Link to={'/aboutus'}>About us</Link>\r\n                    </li>\r\n                    <li className= 'nav-list'>\r\n                        <Link to={'/post'}>Posts</Link>\r\n                    </li>\r\n                    <li className= 'nav-list'>\r\n                        <Link to={'/message'}>Messages</Link>\r\n                    </li>\r\n                    <li id='options'>\r\n                        Options\r\n                    </li>\r\n                    {!(sessionStorage.getItem('token')) ? (\r\n                        <div className='signup-button'>\r\n                            <ul>\r\n                                <li className=\"nav-signup \">\r\n                                    <Link to={'/signup'}><button className='nav-signup'>Sign Up</button></Link>\r\n                                </li>\r\n                                <li className=\"nav-signup\">\r\n                                    <Link to={'/login'}><button className='nav-signup'>Login</button></Link>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    ) : (\r\n                        <ul>\r\n                        {/*<li className='your-account'>\r\n                            Your account\r\n                            {/* <div className='circle'></div> */}\r\n                        {/*</li>*/}\r\n                        <li className='nav-signup'><button className='nav-signup' onClick={logout}>Logout</button></li>\r\n                        </ul>\r\n\r\n                    )}\r\n                   \r\n\r\n                </ul>\r\n            </div>\r\n            <div className=\"search-modal\">\r\n            {searchResults.length > 0 && searchResults.map((element) => (\r\n        <Searchmodal key={element.id} modalResult={modalResult} realresult={element}/>\r\n    ))}\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","C:\\Users\\shiva\\OneDrive\\Documents\\GitHub\\projectpals_frontend\\paartnup\\src\\components\\Chatapp.js",["136","137"],[],"C:\\Users\\shiva\\OneDrive\\Documents\\GitHub\\projectpals_frontend\\paartnup\\src\\components\\Post.js",["138","139","140","141","142"],[],"import React, { useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './style/Post.css'\r\nimport addimage from './style/add-on-icon-29.jpg'\r\nimport Postitem from './Postitem';\r\n\r\nconst Post = (props) => {\r\n  const [credentials, setcredentials] = useState({ title: '', category: '', description: '' })\r\n\r\n  const changed = (e) => {\r\n    setcredentials({\r\n      ...credentials, [e.target.name]: e.target.value\r\n    })\r\n    console.log(e.target.name);\r\n  }\r\n  const token1 = sessionStorage.getItem('token');\r\n  const postdata = async (e) => {\r\n    e.preventDefault();\r\n\r\n    let response = await fetch('http://adarsh826.pythonanywhere.com/api/core/create-post/', {\r\n      method: 'POST',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        'Authorization': `Bearer ${token1}`\r\n      },\r\n      body: JSON.stringify({\r\n        title: credentials.title\r\n        , category: credentials.category\r\n        , description: credentials.description\r\n      })\r\n    })\r\n    window.location.reload()\r\n    // let json = await response.json();\r\n    // console.log(json);\r\n\r\n  }\r\n\r\n\r\n  const initialposts = [];\r\n  const [posts, setposts] = useState(initialposts);\r\n  const token = sessionStorage.getItem('token');\r\n  const fetchallposts = async () => {\r\n    let response = await fetch('http://adarsh826.pythonanywhere.com/api/core/show-post/', {\r\n      method: 'GET',\r\n      headers: { 'Authorization': `Bearer ${token}` }\r\n    });\r\n    let json = await response.json();\r\n    // console.log(json.payload);\r\n    setposts(json.payload);\r\n  }\r\n\r\n  let navigate = useNavigate();\r\n  const { showalert } = props;\r\n\r\n  useEffect(() => {\r\n\r\n    if (sessionStorage.getItem('msg') !== \"login success\") {\r\n      return navigate('/login');\r\n    }\r\n    // console.log(Array.isArray(posts));\r\n    fetchallposts();\r\n\r\n  }, [])\r\n  return (\r\n    <div className='post-main-container'>\r\n      <div className=\"post-submain-container\">\r\n\r\n\r\n        <div className=\"post-first-container\">\r\n          <div className=\"post-subfirst-container\">\r\n            <div className=\"post-subsubfirst-container\">\r\n              <ul>\r\n                <li>\r\n                  <label htmlFor=\"greetings\" id=\"post-heading\">Hello, {sessionStorage.getItem('username')}</label>\r\n                </li>\r\n                <li>\r\n                  what's on your mind today?\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"post-subsubsecond-container\">\r\n              <ul>\r\n                <li>\r\n                  <div className=\"createpost-subsubsecond-container\">\r\n                    <label htmlFor=\"greetings\" id=\"createpost-heading\">View Posts of Universities/Colleges</label>\r\n                    <img src={addimage} alt=\"an addition sign\" />\r\n\r\n                  </div>\r\n                </li>\r\n                <li>\r\n                  Got some awesome projects? Find the best team to team up now!!\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n \r\n\r\n\r\n        <div className=\"post-secondmain-container\">\r\n          <div className=\"all-posts\">\r\n            {Array.isArray(posts) && posts.length > 0 ? (\r\n              posts.map((element) => (\r\n                <Postitem key={element.id} showalert={props.showalert} post={element} />\r\n              ))\r\n            ) : (\r\n              <p>No posts available</p>\r\n            )}\r\n\r\n\r\n          </div>\r\n        </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"post-second-container\">\r\n        <label htmlFor=\"Create Post\" id='create-post'>Create Post</label>\r\n        <div className=\"createpost-first-container\">\r\n          <div className=\"createpost-second-container\">\r\n            <ul>\r\n              <li>\r\n                <label htmlFor=\"Choose a Title\">Choose a Title</label>\r\n              </li>\r\n              <li>\r\n                <input type=\"text\" className='cp' onChange={changed} name=\"title\" maxLength={50} />\r\n              </li>\r\n              <li>\r\n                <label htmlFor=\"Choose a Title\">Choose your Category:</label>\r\n              </li>\r\n              <li>\r\n                <input type=\"text\" className='cp' id='Category' onChange={changed} name=\"category\" maxLength={60} />\r\n              </li>\r\n              <li>\r\n                <label htmlFor=\"Validation\">Post validity(in days):</label>\r\n              </li>\r\n              <li>\r\n                <input type=\"number\" className='cp' name=\"post-validation\" id='post-validation' />\r\n              </li>\r\n              <li>\r\n                <label htmlFor=\"Description\" >Write about your post:</label>\r\n              </li>\r\n              <li>\r\n                {/* <input type=\"text\" className='cp' id='description' maxLength={250}/> */}\r\n                <textarea name=\"description\" className='cp' id=\"description\" onChange={changed} maxLength={250}></textarea>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className=\"cp-button\">\r\n\r\n          <button onClick={postdata}>Create Post</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default Post\r\n","C:\\Users\\shiva\\OneDrive\\Documents\\GitHub\\projectpals_frontend\\paartnup\\src\\components\\Alert.js",[],[],"C:\\Users\\shiva\\OneDrive\\Documents\\GitHub\\projectpals_frontend\\paartnup\\src\\components\\Login.js",[],[],"C:\\Users\\shiva\\OneDrive\\Documents\\GitHub\\projectpals_frontend\\paartnup\\src\\components\\About.js",[],[],"C:\\Users\\shiva\\OneDrive\\Documents\\GitHub\\projectpals_frontend\\paartnup\\src\\components\\Signup.js",[],[],"C:\\Users\\shiva\\OneDrive\\Documents\\GitHub\\projectpals_frontend\\paartnup\\src\\components\\Profile.js",["143","144"],[],"import React, { useEffect, useState } from 'react';\r\nimport './style/Profile.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Userpost from './Userpost';\r\n\r\nconst Profile = (props) => {\r\n  // Assuming posts is defined somewhere in your component's state or props\r\n  const initialposts = [];\r\n  const initialsearched = [];\r\n  const [posts, setposts] = useState(initialposts);\r\n  const [search, setsearch] = useState(initialsearched);\r\n  const token = sessionStorage.getItem('token');\r\n  const fetchallposts = async () => {\r\n    let response = await fetch('http://adarsh826.pythonanywhere.com/api/core/user-posts/', {\r\n      method: 'GET',\r\n      headers: { 'Authorization': `Bearer ${token}` }\r\n    });\r\n    let json = await response.json();\r\n    // console.log(json)\r\n    setposts(json);\r\n  }\r\n\r\n  const searched_name = sessionStorage.getItem('username')\r\n\r\n  const fetchalldata = async () => {\r\n    let response = await fetch(`http://adarsh826.pythonanywhere.com/api/accounts/search/${searched_name}`, {\r\n      method: 'GET',\r\n      headers: { 'Authorization': `Bearer ${token}` }\r\n    });\r\n    let json = await response.json();\r\n    // console.log(json[0])\r\n    setsearch(json);\r\n    \r\n  }\r\n\r\n  let navigate = useNavigate();\r\n  const { showalert } = props;\r\n\r\n  useEffect(() => {\r\n\r\n    if (sessionStorage.getItem('msg') !== \"login success\") {\r\n      return navigate('/login');\r\n    }\r\n    fetchalldata();\r\n    fetchallposts();\r\n    console.log(search);\r\n\r\n  }, [search])\r\n\r\n  const clicked = async() =>{\r\n\r\n    const emails = posts.email;\r\n\r\n    let response = await fetch('http://adarsh826.pythonanywhere.com/api/core/connect/', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json','Authorization': `Bearer ${token}` },\r\n        body: JSON.stringify({\r\n            email: emails\r\n        })\r\n      });\r\n      let json = await response.json();\r\n      console.log(json);\r\n    props.showalert('Email has been sent', 'success');\r\n    \r\n    // navigate(\"/message\")\r\n}\r\n  return (\r\n    \r\n    <div className='profile-main-container'>\r\n      {Array.isArray(search) ? (search.map((element)=>(\r\n      <div className=\"profile-first-container\" key={element.id}>\r\n        <div className=\"account-image\">\r\n          \r\n        </div>\r\n        <div className=\"profile-details\">\r\n          <ul>\r\n            <li>\r\n              <h1>{element.full_name}</h1>\r\n            </li>\r\n            <li>\r\n              <h3>{element.username}</h3>\r\n            </li>\r\n            <li className='connect-button'>\r\n              <button onClick={clicked}>Connect</button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"profile-biodetails\">\r\n          <div className=\"profile-collegename\">\r\n            <ul>\r\n              <li>\r\n                <div className=\"circle\"></div>\r\n              </li>\r\n              <li>\r\n                Dronacharya College of Engineering\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <h4>About</h4>\r\n          <div className=\"profile-bio\">\r\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Vero quaerat quasi minima nisi aliquid animi blanditiis nesciunt esse ea, culpa cumque, atque ex nihil labore.\r\n          </div>\r\n        </div>\r\n      </div>))):('')}\r\n      <h2 id='POSTS'>Posts:</h2>\r\n      <div className=\"post-secondmain-container\">\r\n        <div className=\"all-posts\">\r\n          {Array.isArray(posts) && posts.length > 0 ? (\r\n            posts.map((element) => (\r\n              <Userpost key={element.id} post={element} />\r\n            ))\r\n          ) : (\r\n            <p>No posts available</p>\r\n          )}\r\n          {/* <Userpost/> */}\r\n          \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","C:\\Users\\shiva\\OneDrive\\Documents\\GitHub\\projectpals_frontend\\paartnup\\src\\components\\Error.js",[],[],"C:\\Users\\shiva\\OneDrive\\Documents\\GitHub\\projectpals_frontend\\paartnup\\src\\components\\Searchmodal.js",["145"],[],"C:\\Users\\shiva\\OneDrive\\Documents\\GitHub\\projectpals_frontend\\paartnup\\src\\components\\Chats.js",["146","147","148"],[],"import React, { useRef, useState, useEffect } from \"react\";\r\nimport './style/Chats.css';\r\nimport data from '@emoji-mart/data';\r\nimport Picker from '@emoji-mart/react';\r\nimport socketIo from \"socket.io-client\";\r\nimport Message from \"./Message\";\r\nimport ReactScrollToBottom from 'react-scroll-to-bottom';\r\n\r\nconst Chats = () => {\r\n  const [ispickervisible, setPickervisible] = useState(false);\r\n  const [selectedEmojis, setSelectedEmojis] = useState([]);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [currentmessage, setcurrentMessage] = useState(\"\");\r\n  const [messages,setmessages] = useState([]);\r\n  const inputRef = useRef(null);\r\n  const emojiSelectorRef = useRef(null);\r\n\r\n  // const socket = socketIo(ENDPOINT,{transports:['websocket']});\r\n  // useEffect(()=>{\r\n  //   socket.on('connect',()=>{\r\n  //     alert('connected');\r\n  //   });\r\n\r\n  //   socket.emit('joined',{})\r\n  //   return()=>{\r\n\r\n  //   }\r\n  // },[])\r\n\r\n  const inputtextvalue = (e) => {\r\n    setMessage(e.target.value);\r\n    console.log(message);\r\n  }\r\n\r\n  const handleEmojiSelect = (e) => {\r\n    const selectedEmoji = e.native;\r\n    setSelectedEmojis((prevEmojis) => [...prevEmojis, selectedEmoji]);\r\n    setMessage((prevMessage) => prevMessage + selectedEmoji);\r\n  }\r\n\r\n  const handleEmojiButtonClick = (e) => {\r\n    e.preventDefault();\r\n    setPickervisible(!ispickervisible);\r\n  }\r\n\r\n  const handleOutsideClick = (event) => {\r\n    if (emojiSelectorRef.current && !emojiSelectorRef.current.contains(event.target) && !event.target.classList.contains('emojibutton')) {\r\n      setPickervisible(false);\r\n    }\r\n  }\r\n\r\n  const sendmessage = () => {\r\n    // setcurrentMessage(message);\r\n    if(message!==''){\r\n      setmessages([...messages,message]);\r\n      setMessage('');\r\n      setSelectedEmojis([]); // Clear selected emojis after sending the message\r\n    }\r\n  }\r\n  \r\n\r\n  useEffect(() => {\r\n    document.addEventListener('click', handleOutsideClick);\r\n  }, [ispickervisible]);\r\n\r\n\r\n  const useKeyPress = (key, callback) => {\r\n    useEffect(() => {\r\n      const handleKeyPress = (e) => {\r\n        if (e.key === key) {\r\n          e.preventDefault();\r\n          callback();\r\n        }\r\n      };\r\n  \r\n      document.addEventListener('keydown', handleKeyPress);\r\n  \r\n      return () => {\r\n        document.removeEventListener('keydown', handleKeyPress);\r\n      };\r\n    }, [key, callback]);\r\n  };\r\n  \r\n  // Usage in your component\r\n  useKeyPress('Enter', sendmessage);\r\n\r\n  return (\r\n    <div className=\"chats\">\r\n      <div className=\"chats-container\">\r\n        <div className=\"chat-header\"></div>\r\n        <ReactScrollToBottom className=\"chat-box\">\r\n          {/* <h1>{currentmessage}</h1> */}\r\n          {messages.map((item, i) => (\r\n  <Message key={i} message={item} />\r\n))}\r\n\r\n          {/* <Message message={currentmessage}/> */}\r\n          <div\r\n            className=\"emoji-selector\"\r\n            style={ispickervisible ? { display: 'block',width:'fit-content',height:'fit-content', bottom: '0px', position: 'absolute',zIndex:'1000000' } : { display: 'none' }}\r\n\r\n            ref={emojiSelectorRef}\r\n          >\r\n            <Picker data={data} previewPostion='bottom' onEmojiSelect={handleEmojiSelect} emojiSize={24} />\r\n          </div>\r\n        </ReactScrollToBottom>\r\n        <div className=\"chat-input\">\r\n          <button className=\"emojibutton\" onClick={handleEmojiButtonClick}>emoji</button>\r\n          <input\r\n            className=\"input-text\"\r\n            onChange={inputtextvalue}\r\n            ref={inputRef}\r\n            value={message}\r\n            name='chat-input'\r\n            placeholder=\"Type your message...\"\r\n            type=\"text\"\r\n          />\r\n          <button onClick={sendmessage} onEnter>send</button>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chats;\r\n","C:\\Users\\shiva\\OneDrive\\Documents\\GitHub\\projectpals_frontend\\paartnup\\src\\components\\Postitem.js",["149"],[],"C:\\Users\\shiva\\OneDrive\\Documents\\GitHub\\projectpals_frontend\\paartnup\\src\\components\\College.js",[],[],"C:\\Users\\shiva\\OneDrive\\Documents\\GitHub\\projectpals_frontend\\paartnup\\src\\components\\Messanger.js",[],[],"C:\\Users\\shiva\\OneDrive\\Documents\\GitHub\\projectpals_frontend\\paartnup\\src\\components\\Loginform.js",[],[],"C:\\Users\\shiva\\OneDrive\\Documents\\GitHub\\projectpals_frontend\\paartnup\\src\\components\\Form.js",[],[],"C:\\Users\\shiva\\OneDrive\\Documents\\GitHub\\projectpals_frontend\\paartnup\\src\\components\\Otp.js",["150","151"],[],"C:\\Users\\shiva\\OneDrive\\Documents\\GitHub\\projectpals_frontend\\paartnup\\src\\components\\Studentcollege.js",[],[],"C:\\Users\\shiva\\OneDrive\\Documents\\GitHub\\projectpals_frontend\\paartnup\\src\\components\\Userpost.js",[],[],"C:\\Users\\shiva\\OneDrive\\Documents\\GitHub\\projectpals_frontend\\paartnup\\src\\components\\Message.js",[],[],"C:\\Users\\shiva\\OneDrive\\Documents\\GitHub\\projectpals_frontend\\paartnup\\src\\components\\Messagecomp.js",[],[],{"ruleId":"152","severity":1,"message":"153","line":12,"column":8,"nodeType":"154","messageId":"155","endLine":12,"endColumn":19},{"ruleId":"152","severity":1,"message":"156","line":29,"column":10,"nodeType":"154","messageId":"155","endLine":29,"endColumn":17},{"ruleId":"152","severity":1,"message":"157","line":1,"column":17,"nodeType":"154","messageId":"155","endLine":1,"endColumn":27},{"ruleId":"152","severity":1,"message":"158","line":14,"column":11,"nodeType":"154","messageId":"155","endLine":14,"endColumn":16},{"ruleId":"152","severity":1,"message":"159","line":3,"column":8,"nodeType":"154","messageId":"155","endLine":3,"endColumn":17},{"ruleId":"152","severity":1,"message":"160","line":4,"column":8,"nodeType":"154","messageId":"155","endLine":4,"endColumn":13},{"ruleId":"152","severity":1,"message":"161","line":1,"column":28,"nodeType":"154","messageId":"155","endLine":1,"endColumn":34},{"ruleId":"152","severity":1,"message":"162","line":2,"column":10,"nodeType":"154","messageId":"155","endLine":2,"endColumn":21},{"ruleId":"152","severity":1,"message":"163","line":12,"column":10,"nodeType":"154","messageId":"155","endLine":12,"endColumn":22},{"ruleId":"152","severity":1,"message":"164","line":12,"column":24,"nodeType":"154","messageId":"155","endLine":12,"endColumn":39},{"ruleId":"165","severity":1,"message":"166","line":96,"column":6,"nodeType":"167","endLine":96,"endColumn":13,"suggestions":"168"},{"ruleId":"152","severity":1,"message":"169","line":10,"column":11,"nodeType":"154","messageId":"155","endLine":10,"endColumn":20},{"ruleId":"165","severity":1,"message":"170","line":62,"column":6,"nodeType":"167","endLine":62,"endColumn":37,"suggestions":"171"},{"ruleId":"152","severity":1,"message":"172","line":1,"column":17,"nodeType":"154","messageId":"155","endLine":1,"endColumn":25},{"ruleId":"152","severity":1,"message":"162","line":7,"column":10,"nodeType":"154","messageId":"155","endLine":7,"endColumn":21},{"ruleId":"165","severity":1,"message":"173","line":73,"column":6,"nodeType":"167","endLine":73,"endColumn":21,"suggestions":"174"},{"ruleId":"175","severity":1,"message":"176","line":129,"column":121,"nodeType":"177","endLine":129,"endColumn":147},{"ruleId":"152","severity":1,"message":"178","line":7,"column":9,"nodeType":"154","messageId":"155","endLine":7,"endColumn":17},{"ruleId":"179","severity":1,"message":"180","line":49,"column":13,"nodeType":"177","endLine":49,"endColumn":25},{"ruleId":"179","severity":1,"message":"180","line":52,"column":85,"nodeType":"177","endLine":52,"endColumn":97},"no-unused-vars","'Searchmodal' is defined but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","'useContext' is defined but never used.","'token' is assigned a value but never used.","'Messanger' is defined but never used.","'Chats' is defined but never used.","'useRef' is defined but never used.","'useLocation' is defined but never used.","'fetchResults' is assigned a value but never used.","'setFetchResults' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'category', 'fetchAllPosts', 'fetchData', and 'navigate'. Either include them or remove the dependency array.","ArrayExpression",["181"],"'showalert' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchAllData' and 'fetchAllPosts'. Either include them or remove the dependency array.",["182"],"'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'fetchAllData' and 'username'. Either include them or remove the dependency array.",["183"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'navigate' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md",{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},"Update the dependencies array to be: [category, fetchAllPosts, fetchData, navigate, token]",{"range":"190","text":"191"},"Update the dependencies array to be: [token, navigate, searchedName, fetchAllData, fetchAllPosts]",{"range":"192","text":"193"},"Update the dependencies array to be: [fetchAllData, token, user_id, username]",{"range":"194","text":"195"},[2800,2807],"[category, fetchAllPosts, fetchData, navigate, token]",[1896,1927],"[token, navigate, searchedName, fetchAllData, fetchAllPosts]",[2858,2873],"[fetchAllData, token, user_id, username]"]