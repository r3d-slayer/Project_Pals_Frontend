{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shiva\\\\OneDrive\\\\Documents\\\\GitHub\\\\projectpals_frontend\\\\paartnup\\\\src\\\\components\\\\Chats.js\",\n  _s2 = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from \"react\";\nimport './style/Chats.css';\nimport data from '@emoji-mart/data';\nimport Picker from '@emoji-mart/react';\nimport socketIo from \"socket.io-client\";\nimport Message from \"./Message\";\nimport ReactScrollToBottom from 'react-scroll-to-bottom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chats = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [ispickervisible, setPickervisible] = useState(false);\n  const [selectedEmojis, setSelectedEmojis] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [currentmessage, setcurrentMessage] = useState(\"\");\n  const [messages, setmessages] = useState([]);\n  const inputRef = useRef(null);\n  const emojiSelectorRef = useRef(null);\n\n  // const socket = socketIo(ENDPOINT,{transports:['websocket']});\n  // useEffect(()=>{\n  //   socket.on('connect',()=>{\n  //     alert('connected');\n  //   });\n\n  //   socket.emit('joined',{})\n  //   return()=>{\n\n  //   }\n  // },[])\n\n  const inputtextvalue = e => {\n    setMessage(e.target.value);\n    console.log(message);\n  };\n  const handleEmojiSelect = e => {\n    const selectedEmoji = e.native;\n    setSelectedEmojis(prevEmojis => [...prevEmojis, selectedEmoji]);\n    setMessage(prevMessage => prevMessage + selectedEmoji);\n  };\n  const handleEmojiButtonClick = e => {\n    e.preventDefault();\n    setPickervisible(!ispickervisible);\n  };\n  const handleOutsideClick = event => {\n    if (emojiSelectorRef.current && !emojiSelectorRef.current.contains(event.target) && !event.target.classList.contains('emojibutton')) {\n      setPickervisible(false);\n    }\n  };\n  const sendmessage = () => {\n    // setcurrentMessage(message);\n    if (message !== '') {\n      setmessages([...messages, message]);\n      setMessage('');\n      setSelectedEmojis([]); // Clear selected emojis after sending the message\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('click', handleOutsideClick);\n  }, [ispickervisible]);\n  const useKeyPress = (key, callback) => {\n    _s();\n    useEffect(() => {\n      const handleKeyPress = e => {\n        if (e.key === key) {\n          e.preventDefault();\n          callback();\n        }\n      };\n      document.addEventListener('keydown', handleKeyPress);\n      return () => {\n        document.removeEventListener('keydown', handleKeyPress);\n      };\n    }, [key, callback]);\n  };\n\n  // Usage in your component\n  _s(useKeyPress, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n  useKeyPress('Enter', sendmessage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chats\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chats-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactScrollToBottom, {\n        className: \"chat-box\",\n        children: [messages.map((item, i) => /*#__PURE__*/_jsxDEV(Message, {\n          message: item\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 3\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"emoji-selector\",\n          style: ispickervisible ? {\n            display: 'block',\n            width: 'fit-content',\n            height: 'fit-content',\n            bottom: '0px',\n            position: 'absolute',\n            zIndex: '1000000'\n          } : {\n            display: 'none'\n          },\n          ref: emojiSelectorRef,\n          children: /*#__PURE__*/_jsxDEV(Picker, {\n            data: data,\n            previewPostion: \"bottom\",\n            onEmojiSelect: handleEmojiSelect,\n            emojiSize: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"emojibutton\",\n          onClick: handleEmojiButtonClick,\n          children: \"emoji\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input-text\",\n          onChange: inputtextvalue,\n          ref: inputRef,\n          value: message,\n          name: \"chat-input\",\n          placeholder: \"Type your message...\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendmessage,\n          onEnter: true,\n          children: \"send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s2(Chats, \"6QAmMyhdkLvnJ0AuOEVROjBijys=\", true);\n_c = Chats;\nexport default Chats;\nvar _c;\n$RefreshReg$(_c, \"Chats\");","map":{"version":3,"names":["React","useRef","useState","useEffect","data","Picker","socketIo","Message","ReactScrollToBottom","jsxDEV","_jsxDEV","Chats","_s2","_s","$RefreshSig$","ispickervisible","setPickervisible","selectedEmojis","setSelectedEmojis","message","setMessage","currentmessage","setcurrentMessage","messages","setmessages","inputRef","emojiSelectorRef","inputtextvalue","e","target","value","console","log","handleEmojiSelect","selectedEmoji","native","prevEmojis","prevMessage","handleEmojiButtonClick","preventDefault","handleOutsideClick","event","current","contains","classList","sendmessage","document","addEventListener","useKeyPress","key","callback","handleKeyPress","removeEventListener","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","i","style","display","width","height","bottom","position","zIndex","ref","previewPostion","onEmojiSelect","emojiSize","onClick","onChange","name","placeholder","type","onEnter","_c","$RefreshReg$"],"sources":["C:/Users/shiva/OneDrive/Documents/GitHub/projectpals_frontend/paartnup/src/components/Chats.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\r\nimport './style/Chats.css';\r\nimport data from '@emoji-mart/data';\r\nimport Picker from '@emoji-mart/react';\r\nimport socketIo from \"socket.io-client\";\r\nimport Message from \"./Message\";\r\nimport ReactScrollToBottom from 'react-scroll-to-bottom';\r\n\r\nconst Chats = () => {\r\n  const [ispickervisible, setPickervisible] = useState(false);\r\n  const [selectedEmojis, setSelectedEmojis] = useState([]);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [currentmessage, setcurrentMessage] = useState(\"\");\r\n  const [messages,setmessages] = useState([]);\r\n  const inputRef = useRef(null);\r\n  const emojiSelectorRef = useRef(null);\r\n\r\n  // const socket = socketIo(ENDPOINT,{transports:['websocket']});\r\n  // useEffect(()=>{\r\n  //   socket.on('connect',()=>{\r\n  //     alert('connected');\r\n  //   });\r\n\r\n  //   socket.emit('joined',{})\r\n  //   return()=>{\r\n\r\n  //   }\r\n  // },[])\r\n\r\n  const inputtextvalue = (e) => {\r\n    setMessage(e.target.value);\r\n    console.log(message);\r\n  }\r\n\r\n  const handleEmojiSelect = (e) => {\r\n    const selectedEmoji = e.native;\r\n    setSelectedEmojis((prevEmojis) => [...prevEmojis, selectedEmoji]);\r\n    setMessage((prevMessage) => prevMessage + selectedEmoji);\r\n  }\r\n\r\n  const handleEmojiButtonClick = (e) => {\r\n    e.preventDefault();\r\n    setPickervisible(!ispickervisible);\r\n  }\r\n\r\n  const handleOutsideClick = (event) => {\r\n    if (emojiSelectorRef.current && !emojiSelectorRef.current.contains(event.target) && !event.target.classList.contains('emojibutton')) {\r\n      setPickervisible(false);\r\n    }\r\n  }\r\n\r\n  const sendmessage = () => {\r\n    // setcurrentMessage(message);\r\n    if(message!==''){\r\n      setmessages([...messages,message]);\r\n      setMessage('');\r\n      setSelectedEmojis([]); // Clear selected emojis after sending the message\r\n    }\r\n  }\r\n  \r\n\r\n  useEffect(() => {\r\n    document.addEventListener('click', handleOutsideClick);\r\n  }, [ispickervisible]);\r\n\r\n\r\n  const useKeyPress = (key, callback) => {\r\n    useEffect(() => {\r\n      const handleKeyPress = (e) => {\r\n        if (e.key === key) {\r\n          e.preventDefault();\r\n          callback();\r\n        }\r\n      };\r\n  \r\n      document.addEventListener('keydown', handleKeyPress);\r\n  \r\n      return () => {\r\n        document.removeEventListener('keydown', handleKeyPress);\r\n      };\r\n    }, [key, callback]);\r\n  };\r\n  \r\n  // Usage in your component\r\n  useKeyPress('Enter', sendmessage);\r\n\r\n  return (\r\n    <div className=\"chats\">\r\n      <div className=\"chats-container\">\r\n        <div className=\"chat-header\"></div>\r\n        <ReactScrollToBottom className=\"chat-box\">\r\n          {/* <h1>{currentmessage}</h1> */}\r\n          {messages.map((item, i) => (\r\n  <Message key={i} message={item} />\r\n))}\r\n\r\n          {/* <Message message={currentmessage}/> */}\r\n          <div\r\n            className=\"emoji-selector\"\r\n            style={ispickervisible ? { display: 'block',width:'fit-content',height:'fit-content', bottom: '0px', position: 'absolute',zIndex:'1000000' } : { display: 'none' }}\r\n\r\n            ref={emojiSelectorRef}\r\n          >\r\n            <Picker data={data} previewPostion='bottom' onEmojiSelect={handleEmojiSelect} emojiSize={24} />\r\n          </div>\r\n        </ReactScrollToBottom>\r\n        <div className=\"chat-input\">\r\n          <button className=\"emojibutton\" onClick={handleEmojiButtonClick}>emoji</button>\r\n          <input\r\n            className=\"input-text\"\r\n            onChange={inputtextvalue}\r\n            ref={inputRef}\r\n            value={message}\r\n            name='chat-input'\r\n            placeholder=\"Type your message...\"\r\n            type=\"text\"\r\n          />\r\n          <button onClick={sendmessage} onEnter>send</button>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chats;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}