{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shiva\\\\OneDrive\\\\Documents\\\\GitHub\\\\projectpals_frontend\\\\paartnup\\\\src\\\\components\\\\Chats.js\",\n  _s3 = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport './style/Chats.css';\nimport data from '@emoji-mart/data';\nimport Picker from '@emoji-mart/react';\nimport Message from \"./Message\";\nimport ReactScrollToBottom from 'react-scroll-to-bottom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chats = () => {\n  _s3();\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  const [isPickerVisible, setPickerVisible] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [userStatuses, setUserStatuses] = useState({});\n  const inputRef = useRef(null);\n  const emojiSelectorRef = useRef(null);\n  const chatSocket = useRef(null);\n  const onlineStatusSocket = useRef(null);\n  const location = useLocation(); // Hook to get the current route location\n  const token = sessionStorage.getItem('token');\n  const username = sessionStorage.getItem('username');\n  const user_id = sessionStorage.getItem('user_id');\n  useEffect(() => {\n    chatSocket.current = new WebSocket(`ws://127.0.0.1:8000/ws/chat/${user_id}/?token=${token}`);\n    const handleOpen = () => console.log('WebSocket connected');\n    const handleMessage = e => {\n      const data = JSON.parse(e.data);\n      const position = data.username !== username ? 'left' : 'right';\n      setMessages(prevMessages => [...prevMessages, {\n        message: data.message,\n        position\n      }]);\n    };\n    const handleClose = () => console.log('WebSocket closed');\n    const handleError = error => console.error('WebSocket error:', error);\n    chatSocket.current.addEventListener('open', handleOpen);\n    chatSocket.current.addEventListener('message', handleMessage);\n    chatSocket.current.addEventListener('close', handleClose);\n    chatSocket.current.addEventListener('error', handleError);\n    return () => {\n      chatSocket.current.removeEventListener('open', handleOpen);\n      chatSocket.current.removeEventListener('message', handleMessage);\n      chatSocket.current.removeEventListener('close', handleClose);\n      chatSocket.current.removeEventListener('error', handleError);\n      chatSocket.current.close();\n    };\n  }, [token, username, user_id]);\n  _s(useEffect(_s(() => {\n    _s();\n    onlineStatusSocket.current = new WebSocket(`ws://127.0.0.1:8000/ws/online/`);\n    onlineStatusSocket.current.onopen = function (e) {\n      console.log(\"CONNECTED TO ONLINE STATUS CONSUMER\");\n      onlineStatusSocket.current.send(JSON.stringify({\n        'username': username,\n        'online_status': true\n      }));\n    };\n    onlineStatusSocket.current.onclose = function (e) {\n      console.log(\"DISCONNECTED FROM ONLINE STATUS CONSUMER\");\n    };\n    onlineStatusSocket.current.onmessage = function (e) {\n      const data = JSON.parse(e.data);\n      if (data.username !== username) {\n        setUserStatuses(prevStatuses => ({\n          ...prevStatuses,\n          [data.username]: data.online_status ? true : false\n        }));\n      }\n    };\n\n    // Send a message to mark user as offline when route changes\n    useEffect(() => {\n      if (onlineStatusSocket.current) {\n        onlineStatusSocket.current.send(JSON.stringify({\n          'username': username,\n          'online_status': false\n        }));\n      }\n    }, [location.pathname]); // Dependency array includes location.pathname\n\n    return () => {\n      if (onlineStatusSocket.current) {\n        onlineStatusSocket.current.close();\n      }\n    };\n  }, \"OD7bBpZva5O2jO+Puf00hKivP7c=\"), [username, location.pathname]), \"OD7bBpZva5O2jO+Puf00hKivP7c=\"); // Re-run effect when location changes\n\n  const handleInputChange = e => setMessage(e.target.value);\n  const handleEmojiSelect = emoji => setMessage(prevMessage => prevMessage + emoji.native);\n  const toggleEmojiPicker = e => {\n    e.preventDefault();\n    setPickerVisible(!isPickerVisible);\n  };\n  const handleOutsideClick = event => {\n    if (emojiSelectorRef.current && !emojiSelectorRef.current.contains(event.target) && !event.target.classList.contains('emoji-button')) {\n      setPickerVisible(false);\n    }\n  };\n  const sendMessage = () => {\n    if (chatSocket.current && chatSocket.current.readyState === WebSocket.OPEN && message !== \"\") {\n      chatSocket.current.send(JSON.stringify({\n        message,\n        username\n      }));\n      setMessage('');\n    } else {\n      console.error('WebSocket is not open.');\n    }\n  };\n  useEffect(() => {\n    document.addEventListener('click', handleOutsideClick);\n    return () => document.removeEventListener('click', handleOutsideClick);\n  }, []);\n  const useKeyPress = (key, callback) => {\n    _s2();\n    useEffect(() => {\n      const handleKeyPress = e => {\n        if (e.key === key) {\n          e.preventDefault();\n          callback();\n        }\n      };\n      document.addEventListener('keydown', handleKeyPress);\n      return () => document.removeEventListener('keydown', handleKeyPress);\n    }, [key, callback]);\n  };\n  _s2(useKeyPress, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n  useKeyPress('Enter', sendMessage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chats\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chats-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactScrollToBottom, {\n        className: \"chat-box\",\n        children: [messages.map((item, i) => /*#__PURE__*/_jsxDEV(Message, {\n          message: item.message,\n          position: item.position\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"emoji-selector\",\n          style: isPickerVisible ? {\n            display: 'block',\n            transform: 'translateY(100%)'\n          } : {\n            display: 'none'\n          },\n          ref: emojiSelectorRef,\n          children: /*#__PURE__*/_jsxDEV(Picker, {\n            data: data,\n            onEmojiSelect: handleEmojiSelect,\n            emojiSize: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"emoji-button\",\n          onClick: toggleEmojiPicker,\n          children: \"emoji\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input-text\",\n          onChange: handleInputChange,\n          ref: inputRef,\n          value: message,\n          name: \"chat-input\",\n          placeholder: \"Type your message...\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"send-message\",\n          onClick: sendMessage,\n          children: \"send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\n_s3(Chats, \"4M85F458m01Qz7UtE3cqTYlGAh4=\", true, function () {\n  return [useLocation];\n});\n_c = Chats;\nexport default Chats;\nvar _c;\n$RefreshReg$(_c, \"Chats\");","map":{"version":3,"names":["React","useRef","useState","useEffect","useLocation","data","Picker","Message","ReactScrollToBottom","jsxDEV","_jsxDEV","Chats","_s3","_s","$RefreshSig$","_s2","isPickerVisible","setPickerVisible","message","setMessage","messages","setMessages","userStatuses","setUserStatuses","inputRef","emojiSelectorRef","chatSocket","onlineStatusSocket","location","token","sessionStorage","getItem","username","user_id","current","WebSocket","handleOpen","console","log","handleMessage","e","JSON","parse","position","prevMessages","handleClose","handleError","error","addEventListener","removeEventListener","close","onopen","send","stringify","onclose","onmessage","prevStatuses","online_status","pathname","handleInputChange","target","value","handleEmojiSelect","emoji","prevMessage","native","toggleEmojiPicker","preventDefault","handleOutsideClick","event","contains","classList","sendMessage","readyState","OPEN","document","useKeyPress","key","callback","handleKeyPress","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","i","style","display","transform","ref","onEmojiSelect","emojiSize","onClick","onChange","name","placeholder","type","_c","$RefreshReg$"],"sources":["C:/Users/shiva/OneDrive/Documents/GitHub/projectpals_frontend/paartnup/src/components/Chats.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport './style/Chats.css';\r\nimport data from '@emoji-mart/data';\r\nimport Picker from '@emoji-mart/react';\r\nimport Message from \"./Message\";\r\nimport ReactScrollToBottom from 'react-scroll-to-bottom';\r\n\r\nconst Chats = () => {\r\n  const [isPickerVisible, setPickerVisible] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [userStatuses, setUserStatuses] = useState({});\r\n  const inputRef = useRef(null);\r\n  const emojiSelectorRef = useRef(null);\r\n  const chatSocket = useRef(null);\r\n  const onlineStatusSocket = useRef(null);\r\n\r\n  const location = useLocation(); // Hook to get the current route location\r\n  const token = sessionStorage.getItem('token');\r\n  const username = sessionStorage.getItem('username');\r\n  const user_id = sessionStorage.getItem('user_id');\r\n\r\n  useEffect(() => {\r\n    chatSocket.current = new WebSocket(`ws://127.0.0.1:8000/ws/chat/${user_id}/?token=${token}`);\r\n\r\n    const handleOpen = () => console.log('WebSocket connected');\r\n    const handleMessage = (e) => {\r\n      const data = JSON.parse(e.data);\r\n      const position = data.username !== username ? 'left' : 'right';\r\n      setMessages(prevMessages => [...prevMessages, { message: data.message, position }]);\r\n    };\r\n    const handleClose = () => console.log('WebSocket closed');\r\n    const handleError = (error) => console.error('WebSocket error:', error);\r\n\r\n    chatSocket.current.addEventListener('open', handleOpen);\r\n    chatSocket.current.addEventListener('message', handleMessage);\r\n    chatSocket.current.addEventListener('close', handleClose);\r\n    chatSocket.current.addEventListener('error', handleError);\r\n\r\n    return () => {\r\n      chatSocket.current.removeEventListener('open', handleOpen);\r\n      chatSocket.current.removeEventListener('message', handleMessage);\r\n      chatSocket.current.removeEventListener('close', handleClose);\r\n      chatSocket.current.removeEventListener('error', handleError);\r\n      chatSocket.current.close();\r\n    };\r\n  }, [token, username, user_id]);\r\n\r\n  useEffect(() => {\r\n    onlineStatusSocket.current = new WebSocket(`ws://127.0.0.1:8000/ws/online/`);\r\n\r\n    onlineStatusSocket.current.onopen = function(e) {\r\n      console.log(\"CONNECTED TO ONLINE STATUS CONSUMER\");\r\n      onlineStatusSocket.current.send(JSON.stringify({\r\n        'username': username,\r\n        'online_status': true\r\n      }));\r\n    };\r\n\r\n    onlineStatusSocket.current.onclose = function(e) {\r\n      console.log(\"DISCONNECTED FROM ONLINE STATUS CONSUMER\");\r\n    };\r\n    \r\n    onlineStatusSocket.current.onmessage = function(e) {\r\n      const data = JSON.parse(e.data);\r\n      if (data.username !== username) {\r\n        setUserStatuses(prevStatuses => ({\r\n          ...prevStatuses,\r\n          [data.username]: data.online_status ? true : false\r\n        }));\r\n      }\r\n    };\r\n\r\n    // Send a message to mark user as offline when route changes\r\n    useEffect(() => {\r\n      if (onlineStatusSocket.current) {\r\n        onlineStatusSocket.current.send(JSON.stringify({\r\n          'username': username,\r\n          'online_status': false\r\n        }));\r\n      }\r\n    }, [location.pathname]); // Dependency array includes location.pathname\r\n\r\n    return () => {\r\n      if (onlineStatusSocket.current) {\r\n        onlineStatusSocket.current.close();\r\n      }\r\n    };\r\n  }, [username, location.pathname]); // Re-run effect when location changes\r\n\r\n  const handleInputChange = (e) => setMessage(e.target.value);\r\n\r\n  const handleEmojiSelect = (emoji) => setMessage(prevMessage => prevMessage + emoji.native);\r\n\r\n  const toggleEmojiPicker = (e) => {\r\n    e.preventDefault();\r\n    setPickerVisible(!isPickerVisible);\r\n  };\r\n\r\n  const handleOutsideClick = (event) => {\r\n    if (emojiSelectorRef.current && !emojiSelectorRef.current.contains(event.target) && !event.target.classList.contains('emoji-button')) {\r\n      setPickerVisible(false);\r\n    }\r\n  };\r\n\r\n  const sendMessage = () => {\r\n    if (chatSocket.current && chatSocket.current.readyState === WebSocket.OPEN && message !== \"\") {\r\n      chatSocket.current.send(JSON.stringify({ message, username }));\r\n      setMessage('');\r\n    } else {\r\n      console.error('WebSocket is not open.');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('click', handleOutsideClick);\r\n    return () => document.removeEventListener('click', handleOutsideClick);\r\n  }, []);\r\n\r\n  const useKeyPress = (key, callback) => {\r\n    useEffect(() => {\r\n      const handleKeyPress = (e) => {\r\n        if (e.key === key) {\r\n          e.preventDefault();\r\n          callback();\r\n        }\r\n      };\r\n\r\n      document.addEventListener('keydown', handleKeyPress);\r\n      return () => document.removeEventListener('keydown', handleKeyPress);\r\n    }, [key, callback]);\r\n  };\r\n\r\n  useKeyPress('Enter', sendMessage);\r\n\r\n  return (\r\n    <div className=\"chats\">\r\n      <div className=\"chats-container\">\r\n        <div className=\"chat-header\"></div>\r\n        <ReactScrollToBottom className=\"chat-box\">\r\n          {messages.map((item, i) => (\r\n            <Message key={i} message={item.message} position={item.position} />\r\n          ))}\r\n          <div className=\"emoji-selector\" style={isPickerVisible ? { display: 'block', transform: 'translateY(100%)' } : { display: 'none' }} ref={emojiSelectorRef}>\r\n            <Picker data={data} onEmojiSelect={handleEmojiSelect} emojiSize={24} />\r\n          </div>\r\n        </ReactScrollToBottom>\r\n        <div className=\"chat-input\">\r\n          <button className=\"emoji-button\" onClick={toggleEmojiPicker}>emoji</button>\r\n          <input className=\"input-text\" onChange={handleInputChange} ref={inputRef} value={message} name='chat-input' placeholder=\"Type your message...\" type=\"text\" />\r\n          <button className=\"send-message\" onClick={sendMessage}>send</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chats;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,mBAAmB;AAC1B,OAAOC,IAAI,MAAM,kBAAkB;AACnC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,mBAAmB,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;IAAAC,GAAA,GAAAD,YAAA;EAClB,MAAM,CAACE,eAAe,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACkB,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACoB,YAAY,EAAEC,eAAe,CAAC,GAAGrB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpD,MAAMsB,QAAQ,GAAGvB,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMwB,gBAAgB,GAAGxB,MAAM,CAAC,IAAI,CAAC;EACrC,MAAMyB,UAAU,GAAGzB,MAAM,CAAC,IAAI,CAAC;EAC/B,MAAM0B,kBAAkB,GAAG1B,MAAM,CAAC,IAAI,CAAC;EAEvC,MAAM2B,QAAQ,GAAGxB,WAAW,CAAC,CAAC,CAAC,CAAC;EAChC,MAAMyB,KAAK,GAAGC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;EAC7C,MAAMC,QAAQ,GAAGF,cAAc,CAACC,OAAO,CAAC,UAAU,CAAC;EACnD,MAAME,OAAO,GAAGH,cAAc,CAACC,OAAO,CAAC,SAAS,CAAC;EAEjD5B,SAAS,CAAC,MAAM;IACduB,UAAU,CAACQ,OAAO,GAAG,IAAIC,SAAS,CAAE,+BAA8BF,OAAQ,WAAUJ,KAAM,EAAC,CAAC;IAE5F,MAAMO,UAAU,GAAGA,CAAA,KAAMC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IAC3D,MAAMC,aAAa,GAAIC,CAAC,IAAK;MAC3B,MAAMnC,IAAI,GAAGoC,IAAI,CAACC,KAAK,CAACF,CAAC,CAACnC,IAAI,CAAC;MAC/B,MAAMsC,QAAQ,GAAGtC,IAAI,CAAC2B,QAAQ,KAAKA,QAAQ,GAAG,MAAM,GAAG,OAAO;MAC9DX,WAAW,CAACuB,YAAY,IAAI,CAAC,GAAGA,YAAY,EAAE;QAAE1B,OAAO,EAAEb,IAAI,CAACa,OAAO;QAAEyB;MAAS,CAAC,CAAC,CAAC;IACrF,CAAC;IACD,MAAME,WAAW,GAAGA,CAAA,KAAMR,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IACzD,MAAMQ,WAAW,GAAIC,KAAK,IAAKV,OAAO,CAACU,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;IAEvErB,UAAU,CAACQ,OAAO,CAACc,gBAAgB,CAAC,MAAM,EAAEZ,UAAU,CAAC;IACvDV,UAAU,CAACQ,OAAO,CAACc,gBAAgB,CAAC,SAAS,EAAET,aAAa,CAAC;IAC7Db,UAAU,CAACQ,OAAO,CAACc,gBAAgB,CAAC,OAAO,EAAEH,WAAW,CAAC;IACzDnB,UAAU,CAACQ,OAAO,CAACc,gBAAgB,CAAC,OAAO,EAAEF,WAAW,CAAC;IAEzD,OAAO,MAAM;MACXpB,UAAU,CAACQ,OAAO,CAACe,mBAAmB,CAAC,MAAM,EAAEb,UAAU,CAAC;MAC1DV,UAAU,CAACQ,OAAO,CAACe,mBAAmB,CAAC,SAAS,EAAEV,aAAa,CAAC;MAChEb,UAAU,CAACQ,OAAO,CAACe,mBAAmB,CAAC,OAAO,EAAEJ,WAAW,CAAC;MAC5DnB,UAAU,CAACQ,OAAO,CAACe,mBAAmB,CAAC,OAAO,EAAEH,WAAW,CAAC;MAC5DpB,UAAU,CAACQ,OAAO,CAACgB,KAAK,CAAC,CAAC;IAC5B,CAAC;EACH,CAAC,EAAE,CAACrB,KAAK,EAAEG,QAAQ,EAAEC,OAAO,CAAC,CAAC;EAE9BpB,EAAA,CAAAV,SAAS,CAAAU,EAAA,CAAC,MAAM;IAAAA,EAAA;IACdc,kBAAkB,CAACO,OAAO,GAAG,IAAIC,SAAS,CAAE,gCAA+B,CAAC;IAE5ER,kBAAkB,CAACO,OAAO,CAACiB,MAAM,GAAG,UAASX,CAAC,EAAE;MAC9CH,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;MAClDX,kBAAkB,CAACO,OAAO,CAACkB,IAAI,CAACX,IAAI,CAACY,SAAS,CAAC;QAC7C,UAAU,EAAErB,QAAQ;QACpB,eAAe,EAAE;MACnB,CAAC,CAAC,CAAC;IACL,CAAC;IAEDL,kBAAkB,CAACO,OAAO,CAACoB,OAAO,GAAG,UAASd,CAAC,EAAE;MAC/CH,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAC;IACzD,CAAC;IAEDX,kBAAkB,CAACO,OAAO,CAACqB,SAAS,GAAG,UAASf,CAAC,EAAE;MACjD,MAAMnC,IAAI,GAAGoC,IAAI,CAACC,KAAK,CAACF,CAAC,CAACnC,IAAI,CAAC;MAC/B,IAAIA,IAAI,CAAC2B,QAAQ,KAAKA,QAAQ,EAAE;QAC9BT,eAAe,CAACiC,YAAY,KAAK;UAC/B,GAAGA,YAAY;UACf,CAACnD,IAAI,CAAC2B,QAAQ,GAAG3B,IAAI,CAACoD,aAAa,GAAG,IAAI,GAAG;QAC/C,CAAC,CAAC,CAAC;MACL;IACF,CAAC;;IAED;IACAtD,SAAS,CAAC,MAAM;MACd,IAAIwB,kBAAkB,CAACO,OAAO,EAAE;QAC9BP,kBAAkB,CAACO,OAAO,CAACkB,IAAI,CAACX,IAAI,CAACY,SAAS,CAAC;UAC7C,UAAU,EAAErB,QAAQ;UACpB,eAAe,EAAE;QACnB,CAAC,CAAC,CAAC;MACL;IACF,CAAC,EAAE,CAACJ,QAAQ,CAAC8B,QAAQ,CAAC,CAAC,CAAC,CAAC;;IAEzB,OAAO,MAAM;MACX,IAAI/B,kBAAkB,CAACO,OAAO,EAAE;QAC9BP,kBAAkB,CAACO,OAAO,CAACgB,KAAK,CAAC,CAAC;MACpC;IACF,CAAC;EACH,CAAC,mCAAE,CAAClB,QAAQ,EAAEJ,QAAQ,CAAC8B,QAAQ,CAAC,CAAC,kCAAC,CAAC;;EAEnC,MAAMC,iBAAiB,GAAInB,CAAC,IAAKrB,UAAU,CAACqB,CAAC,CAACoB,MAAM,CAACC,KAAK,CAAC;EAE3D,MAAMC,iBAAiB,GAAIC,KAAK,IAAK5C,UAAU,CAAC6C,WAAW,IAAIA,WAAW,GAAGD,KAAK,CAACE,MAAM,CAAC;EAE1F,MAAMC,iBAAiB,GAAI1B,CAAC,IAAK;IAC/BA,CAAC,CAAC2B,cAAc,CAAC,CAAC;IAClBlD,gBAAgB,CAAC,CAACD,eAAe,CAAC;EACpC,CAAC;EAED,MAAMoD,kBAAkB,GAAIC,KAAK,IAAK;IACpC,IAAI5C,gBAAgB,CAACS,OAAO,IAAI,CAACT,gBAAgB,CAACS,OAAO,CAACoC,QAAQ,CAACD,KAAK,CAACT,MAAM,CAAC,IAAI,CAACS,KAAK,CAACT,MAAM,CAACW,SAAS,CAACD,QAAQ,CAAC,cAAc,CAAC,EAAE;MACpIrD,gBAAgB,CAAC,KAAK,CAAC;IACzB;EACF,CAAC;EAED,MAAMuD,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAI9C,UAAU,CAACQ,OAAO,IAAIR,UAAU,CAACQ,OAAO,CAACuC,UAAU,KAAKtC,SAAS,CAACuC,IAAI,IAAIxD,OAAO,KAAK,EAAE,EAAE;MAC5FQ,UAAU,CAACQ,OAAO,CAACkB,IAAI,CAACX,IAAI,CAACY,SAAS,CAAC;QAAEnC,OAAO;QAAEc;MAAS,CAAC,CAAC,CAAC;MAC9Db,UAAU,CAAC,EAAE,CAAC;IAChB,CAAC,MAAM;MACLkB,OAAO,CAACU,KAAK,CAAC,wBAAwB,CAAC;IACzC;EACF,CAAC;EAED5C,SAAS,CAAC,MAAM;IACdwE,QAAQ,CAAC3B,gBAAgB,CAAC,OAAO,EAAEoB,kBAAkB,CAAC;IACtD,OAAO,MAAMO,QAAQ,CAAC1B,mBAAmB,CAAC,OAAO,EAAEmB,kBAAkB,CAAC;EACxE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,WAAW,GAAGA,CAACC,GAAG,EAAEC,QAAQ,KAAK;IAAA/D,GAAA;IACrCZ,SAAS,CAAC,MAAM;MACd,MAAM4E,cAAc,GAAIvC,CAAC,IAAK;QAC5B,IAAIA,CAAC,CAACqC,GAAG,KAAKA,GAAG,EAAE;UACjBrC,CAAC,CAAC2B,cAAc,CAAC,CAAC;UAClBW,QAAQ,CAAC,CAAC;QACZ;MACF,CAAC;MAEDH,QAAQ,CAAC3B,gBAAgB,CAAC,SAAS,EAAE+B,cAAc,CAAC;MACpD,OAAO,MAAMJ,QAAQ,CAAC1B,mBAAmB,CAAC,SAAS,EAAE8B,cAAc,CAAC;IACtE,CAAC,EAAE,CAACF,GAAG,EAAEC,QAAQ,CAAC,CAAC;EACrB,CAAC;EAAC/D,GAAA,CAZI6D,WAAW;EAcjBA,WAAW,CAAC,OAAO,EAAEJ,WAAW,CAAC;EAEjC,oBACE9D,OAAA;IAAKsE,SAAS,EAAC,OAAO;IAAAC,QAAA,eACpBvE,OAAA;MAAKsE,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9BvE,OAAA;QAAKsE,SAAS,EAAC;MAAa;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACnC3E,OAAA,CAACF,mBAAmB;QAACwE,SAAS,EAAC,UAAU;QAAAC,QAAA,GACtC7D,QAAQ,CAACkE,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,kBACpB9E,OAAA,CAACH,OAAO;UAASW,OAAO,EAAEqE,IAAI,CAACrE,OAAQ;UAACyB,QAAQ,EAAE4C,IAAI,CAAC5C;QAAS,GAAlD6C,CAAC;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAmD,CACnE,CAAC,eACF3E,OAAA;UAAKsE,SAAS,EAAC,gBAAgB;UAACS,KAAK,EAAEzE,eAAe,GAAG;YAAE0E,OAAO,EAAE,OAAO;YAAEC,SAAS,EAAE;UAAmB,CAAC,GAAG;YAAED,OAAO,EAAE;UAAO,CAAE;UAACE,GAAG,EAAEnE,gBAAiB;UAAAwD,QAAA,eACxJvE,OAAA,CAACJ,MAAM;YAACD,IAAI,EAAEA,IAAK;YAACwF,aAAa,EAAE/B,iBAAkB;YAACgC,SAAS,EAAE;UAAG;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACa,CAAC,eACtB3E,OAAA;QAAKsE,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBvE,OAAA;UAAQsE,SAAS,EAAC,cAAc;UAACe,OAAO,EAAE7B,iBAAkB;UAAAe,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC3E3E,OAAA;UAAOsE,SAAS,EAAC,YAAY;UAACgB,QAAQ,EAAErC,iBAAkB;UAACiC,GAAG,EAAEpE,QAAS;UAACqC,KAAK,EAAE3C,OAAQ;UAAC+E,IAAI,EAAC,YAAY;UAACC,WAAW,EAAC,sBAAsB;UAACC,IAAI,EAAC;QAAM;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC7J3E,OAAA;UAAQsE,SAAS,EAAC,cAAc;UAACe,OAAO,EAAEvB,WAAY;UAAAS,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACzE,GAAA,CApJID,KAAK;EAAA,QAUQP,WAAW;AAAA;AAAAgG,EAAA,GAVxBzF,KAAK;AAsJX,eAAeA,KAAK;AAAC,IAAAyF,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}