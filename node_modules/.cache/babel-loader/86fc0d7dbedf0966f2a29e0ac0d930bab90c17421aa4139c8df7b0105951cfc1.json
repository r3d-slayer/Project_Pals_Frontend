{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shiva\\\\OneDrive\\\\Documents\\\\GitHub\\\\projectpals_frontend\\\\paartnup\\\\src\\\\components\\\\context\\\\navbar\\\\Navbarstate.js\",\n  _s = $RefreshSig$();\nimport NoteContext from \"./navbarContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteState = props => {\n  _s();\n  const [modalResult, setModalResult] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  // const [loading, setLoading] = useState(false);\n  const token = sessionStorage.getItem('token');\n  const state = () => {\n    const fetchData = async () => {\n      try {\n        // setLoading(true);\n\n        const response = await fetch(`http://127.0.0.1:8000/api/core/search/${searchTerm}`, {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        const data = await response.json();\n        const actualData = data.payload;\n        console.log(actualData.length);\n        // console.log(actualData);\n        if (actualData.length > 0) {\n          setSearchResults(actualData);\n          // console.log(data)\n          setModalResult(true);\n        } else {\n          setSearchResults([]);\n          setModalResult(false);\n        }\n\n        // if(setModalResult){\n        //     window.addEventListener('click',()=>{\n        //         setModalResult(false);\n        //     })\n        // }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      } finally {\n        // setLoading(false);\n      }\n    };\n    const handleSearch = e => {\n      setSearchTerm(e.target.value);\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(NoteContext.Provider, {\n    value: state,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(NoteState, \"5qhXJs3e0B1+slamBEyqQ00sFgY=\");\n_c = NoteState;\nexport default NoteState;\nvar _c;\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"names":["NoteContext","jsxDEV","_jsxDEV","NoteState","props","_s","modalResult","setModalResult","useState","searchTerm","setSearchTerm","searchResults","setSearchResults","token","sessionStorage","getItem","state","fetchData","response","fetch","method","headers","data","json","actualData","payload","console","log","length","error","handleSearch","e","target","value","Provider","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/shiva/OneDrive/Documents/GitHub/projectpals_frontend/paartnup/src/components/context/navbar/Navbarstate.js"],"sourcesContent":["import NoteContext from \"./navbarContext\";\r\n\r\nconst NoteState =(props) =>{\r\n    const [modalResult, setModalResult] = useState(true);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    // const [loading, setLoading] = useState(false);\r\n    const token = sessionStorage.getItem('token');\r\n    const state = () =>{\r\n        const fetchData = async () => {\r\n            try {\r\n                // setLoading(true);\r\n\r\n                const response = await fetch(`http://127.0.0.1:8000/api/core/search/${searchTerm}`, {\r\n                    method: 'GET',\r\n                    headers: { 'Authorization': `Bearer ${token}` }\r\n                });\r\n                const data = await response.json();\r\n                const actualData = data.payload;\r\n                console.log(actualData.length)\r\n                // console.log(actualData);\r\n                if (actualData.length > 0) {\r\n                    setSearchResults(actualData);\r\n                    // console.log(data)\r\n                    setModalResult(true);\r\n                } else {\r\n                    setSearchResults([]);\r\n                    setModalResult(false);\r\n                }\r\n\r\n                // if(setModalResult){\r\n                //     window.addEventListener('click',()=>{\r\n                //         setModalResult(false);\r\n                //     })\r\n                // }\r\n            } catch (error) {\r\n                console.error('Error fetching data:', error);\r\n            } finally {\r\n                // setLoading(false);\r\n            }\r\n        };\r\n            const handleSearch = (e) => {\r\n        setSearchTerm(e.target.value);\r\n    };\r\n\r\n    }\r\n    return(\r\n        <NoteContext.Provider value={state}>\r\n        {props.children}\r\n    </NoteContext.Provider>\r\n    )\r\n\r\n}\r\n\r\nexport default NoteState;"],"mappings":";;AAAA,OAAOA,WAAW,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,SAAS,GAAGC,KAAK,IAAI;EAAAC,EAAA;EACvB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGC,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGF,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACG,aAAa,EAAEC,gBAAgB,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACtD;EACA,MAAMK,KAAK,GAAGC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;EAC7C,MAAMC,KAAK,GAAGA,CAAA,KAAK;IACf,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA;;QAEA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,yCAAwCV,UAAW,EAAC,EAAE;UAChFW,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YAAE,eAAe,EAAG,UAASR,KAAM;UAAE;QAClD,CAAC,CAAC;QACF,MAAMS,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClC,MAAMC,UAAU,GAAGF,IAAI,CAACG,OAAO;QAC/BC,OAAO,CAACC,GAAG,CAACH,UAAU,CAACI,MAAM,CAAC;QAC9B;QACA,IAAIJ,UAAU,CAACI,MAAM,GAAG,CAAC,EAAE;UACvBhB,gBAAgB,CAACY,UAAU,CAAC;UAC5B;UACAjB,cAAc,CAAC,IAAI,CAAC;QACxB,CAAC,MAAM;UACHK,gBAAgB,CAAC,EAAE,CAAC;UACpBL,cAAc,CAAC,KAAK,CAAC;QACzB;;QAEA;QACA;QACA;QACA;QACA;MACJ,CAAC,CAAC,OAAOsB,KAAK,EAAE;QACZH,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAChD,CAAC,SAAS;QACN;MAAA;IAER,CAAC;IACG,MAAMC,YAAY,GAAIC,CAAC,IAAK;MAChCrB,aAAa,CAACqB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IACjC,CAAC;EAED,CAAC;EACD,oBACI/B,OAAA,CAACF,WAAW,CAACkC,QAAQ;IAACD,KAAK,EAAEjB,KAAM;IAAAmB,QAAA,EAClC/B,KAAK,CAAC+B;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAG3B,CAAC;AAAAlC,EAAA,CAlDKF,SAAS;AAAAqC,EAAA,GAATrC,SAAS;AAoDf,eAAeA,SAAS;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}