{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shiva\\\\OneDrive\\\\Documents\\\\GitHub\\\\projectpals_frontend\\\\paartnup\\\\src\\\\components\\\\Chats.js\",\n  _s2 = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from \"react\";\nimport './style/Chats.css';\nimport data from '@emoji-mart/data';\nimport Picker from '@emoji-mart/react';\nimport Message from \"./Message\";\nimport ReactScrollToBottom from 'react-scroll-to-bottom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chats = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [isPickerVisible, setPickerVisible] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const inputRef = useRef(null);\n  const emojiSelectorRef = useRef(null);\n  const chatSocket = useRef(null);\n  const token = sessionStorage.getItem('token');\n  const username = sessionStorage.getItem('username');\n  useEffect(() => {\n    chatSocket.current = new WebSocket(`ws://127.0.0.1:8000/ws/chat/testing/?token=${token}`);\n    const handleOpen = () => console.log('WebSocket connected');\n    const handleMessage = e => {\n      const data = JSON.parse(e.data);\n      const position = data.username !== username ? 'left' : 'right';\n      setMessages(prevMessages => [...prevMessages, {\n        message: data.message,\n        position\n      }]);\n    };\n    const handleClose = () => console.log('WebSocket closed');\n    const handleError = error => console.error('WebSocket error:', error);\n    chatSocket.current.addEventListener('open', handleOpen);\n    chatSocket.current.addEventListener('message', handleMessage);\n    chatSocket.current.addEventListener('close', handleClose);\n    chatSocket.current.addEventListener('error', handleError);\n    return () => {\n      chatSocket.current.removeEventListener('open', handleOpen);\n      chatSocket.current.removeEventListener('message', handleMessage);\n      chatSocket.current.removeEventListener('close', handleClose);\n      chatSocket.current.removeEventListener('error', handleError);\n      chatSocket.current.close();\n    };\n  }, [token, username]);\n  const handleInputChange = e => setMessage(e.target.value);\n  const handleEmojiSelect = emoji => setMessage(prevMessage => prevMessage + emoji.native);\n  const toggleEmojiPicker = e => {\n    e.preventDefault();\n    setPickerVisible(!isPickerVisible);\n  };\n  const handleOutsideClick = event => {\n    if (emojiSelectorRef.current && !emojiSelectorRef.current.contains(event.target) && !event.target.classList.contains('emoji-button')) {\n      setPickerVisible(false);\n    }\n  };\n  const sendMessage = () => {\n    if (chatSocket.current && chatSocket.current.readyState === WebSocket.OPEN && message !== \"\") {\n      chatSocket.current.send(JSON.stringify({\n        message,\n        username\n      }));\n      setMessage('');\n    } else {\n      console.error('WebSocket is not open.');\n    }\n  };\n  useEffect(() => {\n    document.addEventListener('click', handleOutsideClick);\n    return () => document.removeEventListener('click', handleOutsideClick);\n  }, []);\n  const useKeyPress = (key, callback) => {\n    _s();\n    useEffect(() => {\n      const handleKeyPress = e => {\n        if (e.key === key) {\n          e.preventDefault();\n          callback();\n        }\n      };\n      document.addEventListener('keydown', handleKeyPress);\n      return () => document.removeEventListener('keydown', handleKeyPress);\n    }, [key, callback]);\n  };\n  _s(useKeyPress, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n  useKeyPress('Enter', sendMessage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chats\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chats-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactScrollToBottom, {\n        className: \"chat-box\",\n        children: [messages.map((item, i) => /*#__PURE__*/_jsxDEV(Message, {\n          message: item.message,\n          position: item.position\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"emoji-selector\",\n          style: isPickerVisible ? {\n            display: 'block'\n          } : {\n            display: 'none'\n          },\n          ref: emojiSelectorRef,\n          children: /*#__PURE__*/_jsxDEV(Picker, {\n            data: data,\n            onEmojiSelect: handleEmojiSelect,\n            emojiSize: 25\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"emoji-button\",\n          onClick: toggleEmojiPicker,\n          children: \"emoji\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input-text\",\n          onChange: handleInputChange,\n          ref: inputRef,\n          value: message,\n          name: \"chat-input\",\n          placeholder: \"Type your message...\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"send-message\",\n          onClick: sendMessage,\n          children: \"send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s2(Chats, \"ICVtmfzIioqsG36PplodpDUXKoM=\", true);\n_c = Chats;\nexport default Chats;\nvar _c;\n$RefreshReg$(_c, \"Chats\");","map":{"version":3,"names":["React","useRef","useState","useEffect","data","Picker","Message","ReactScrollToBottom","jsxDEV","_jsxDEV","Chats","_s2","_s","$RefreshSig$","isPickerVisible","setPickerVisible","message","setMessage","messages","setMessages","inputRef","emojiSelectorRef","chatSocket","token","sessionStorage","getItem","username","current","WebSocket","handleOpen","console","log","handleMessage","e","JSON","parse","position","prevMessages","handleClose","handleError","error","addEventListener","removeEventListener","close","handleInputChange","target","value","handleEmojiSelect","emoji","prevMessage","native","toggleEmojiPicker","preventDefault","handleOutsideClick","event","contains","classList","sendMessage","readyState","OPEN","send","stringify","document","useKeyPress","key","callback","handleKeyPress","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","i","style","display","ref","onEmojiSelect","emojiSize","onClick","onChange","name","placeholder","type","_c","$RefreshReg$"],"sources":["C:/Users/shiva/OneDrive/Documents/GitHub/projectpals_frontend/paartnup/src/components/Chats.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\r\nimport './style/Chats.css';\r\nimport data from '@emoji-mart/data';\r\nimport Picker from '@emoji-mart/react';\r\nimport Message from \"./Message\";\r\nimport ReactScrollToBottom from 'react-scroll-to-bottom';\r\n\r\nconst Chats = () => {\r\n  const [isPickerVisible, setPickerVisible] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const inputRef = useRef(null);\r\n  const emojiSelectorRef = useRef(null);\r\n  const chatSocket = useRef(null);\r\n  \r\n  const token = sessionStorage.getItem('token');\r\n  const username = sessionStorage.getItem('username');\r\n\r\n  useEffect(() => {\r\n    chatSocket.current = new WebSocket(`ws://127.0.0.1:8000/ws/chat/testing/?token=${token}`);\r\n\r\n    const handleOpen = () => console.log('WebSocket connected');\r\n    const handleMessage = (e) => {\r\n      const data = JSON.parse(e.data);\r\n      const position = data.username !== username ? 'left' : 'right';\r\n      setMessages(prevMessages => [...prevMessages, { message: data.message, position }]);\r\n    };\r\n    const handleClose = () => console.log('WebSocket closed');\r\n    const handleError = (error) => console.error('WebSocket error:', error);\r\n\r\n    chatSocket.current.addEventListener('open', handleOpen);\r\n    chatSocket.current.addEventListener('message', handleMessage);\r\n    chatSocket.current.addEventListener('close', handleClose);\r\n    chatSocket.current.addEventListener('error', handleError);\r\n\r\n    return () => {\r\n      chatSocket.current.removeEventListener('open', handleOpen);\r\n      chatSocket.current.removeEventListener('message', handleMessage);\r\n      chatSocket.current.removeEventListener('close', handleClose);\r\n      chatSocket.current.removeEventListener('error', handleError);\r\n      chatSocket.current.close();\r\n    };\r\n  }, [token, username]);\r\n\r\n  const handleInputChange = (e) => setMessage(e.target.value);\r\n\r\n  const handleEmojiSelect = (emoji) => setMessage(prevMessage => prevMessage + emoji.native);\r\n\r\n  const toggleEmojiPicker = (e) => {\r\n    e.preventDefault();\r\n    setPickerVisible(!isPickerVisible);\r\n  };\r\n\r\n  const handleOutsideClick = (event) => {\r\n    if (emojiSelectorRef.current && !emojiSelectorRef.current.contains(event.target) && !event.target.classList.contains('emoji-button')) {\r\n      setPickerVisible(false);\r\n    }\r\n  };\r\n\r\n  const sendMessage = () => {\r\n    if (chatSocket.current && chatSocket.current.readyState === WebSocket.OPEN && message !== \"\") {\r\n      chatSocket.current.send(JSON.stringify({ message, username }));\r\n      setMessage('');\r\n    } else {\r\n      console.error('WebSocket is not open.');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('click', handleOutsideClick);\r\n    return () => document.removeEventListener('click', handleOutsideClick);\r\n  }, []);\r\n\r\n  const useKeyPress = (key, callback) => {\r\n    useEffect(() => {\r\n      const handleKeyPress = (e) => {\r\n        if (e.key === key) {\r\n          e.preventDefault();\r\n          callback();\r\n        }\r\n      };\r\n      \r\n      document.addEventListener('keydown', handleKeyPress);\r\n      return () => document.removeEventListener('keydown', handleKeyPress);\r\n    }, [key, callback]);\r\n  };\r\n\r\n  useKeyPress('Enter', sendMessage);\r\n\r\n  return (\r\n    <div className=\"chats\">\r\n      <div className=\"chats-container\">\r\n        <div className=\"chat-header\"></div>\r\n        <ReactScrollToBottom className=\"chat-box\">\r\n          {messages.map((item, i) => (\r\n            <Message key={i} message={item.message} position={item.position} />\r\n          ))}\r\n    <div className=\"emoji-selector\" style={isPickerVisible ? { display: 'block'} : { display: 'none' }} ref={emojiSelectorRef}>\r\n            <Picker data={data} onEmojiSelect={handleEmojiSelect} emojiSize={25} />\r\n          </div>\r\n        </ReactScrollToBottom>\r\n        <div className=\"chat-input\">\r\n          <button className=\"emoji-button\" onClick={toggleEmojiPicker}>emoji</button>\r\n          <input className=\"input-text\" onChange={handleInputChange} ref={inputRef} value={message} name='chat-input' placeholder=\"Type your message...\" type=\"text\" />\r\n          <button className=\"send-message\" onClick={sendMessage}>send</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chats;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}