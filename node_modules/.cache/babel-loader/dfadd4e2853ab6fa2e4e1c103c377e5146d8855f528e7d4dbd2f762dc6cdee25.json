{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shiva\\\\OneDrive\\\\Documents\\\\GitHub\\\\projectpals_frontend\\\\paartnup\\\\src\\\\components\\\\context\\\\navbar\\\\Navbarstate.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport NavbarContext from \"./navbarContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NavbarState = props => {\n  _s();\n  const [modalResult, setModalResult] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const token = sessionStorage.getItem('token');\n  const fetchData = async searchQuery => {\n    if (!searchQuery) return;\n    try {\n      const response = await fetch(`http://127.0.0.1:8000/api/core/search/${searchQuery}`, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      const data = await response.json();\n      const actualData = data.payload;\n      if (actualData.length > 0) {\n        setSearchResults(actualData);\n        setModalResult(true);\n      } else {\n        setSearchResults([]);\n        setModalResult(false);\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(NavbarContext.Provider, {\n    value: {\n      fetchData,\n      searchTerm,\n      setSearchTerm,\n      modalResult,\n      searchResults\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(NavbarState, \"d/1fIZNIQWWJkC6g0pzyJ5qjTv8=\");\n_c = NavbarState;\nexport default NavbarState;\nvar _c;\n$RefreshReg$(_c, \"NavbarState\");","map":{"version":3,"names":["useState","NavbarContext","jsxDEV","_jsxDEV","NavbarState","props","_s","modalResult","setModalResult","searchTerm","setSearchTerm","searchResults","setSearchResults","token","sessionStorage","getItem","fetchData","searchQuery","response","fetch","method","headers","data","json","actualData","payload","length","error","console","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/shiva/OneDrive/Documents/GitHub/projectpals_frontend/paartnup/src/components/context/navbar/Navbarstate.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport NavbarContext from \"./navbarContext\";\r\n\r\nconst NavbarState = (props) => {\r\n    const [modalResult, setModalResult] = useState(false);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const token = sessionStorage.getItem('token');\r\n\r\n    const fetchData = async (searchQuery) => {\r\n        if (!searchQuery) return;\r\n\r\n        try {\r\n            const response = await fetch(`http://127.0.0.1:8000/api/core/search/${searchQuery}`, {\r\n                method: 'GET',\r\n                headers: { 'Authorization': `Bearer ${token}` }\r\n            });\r\n            const data = await response.json();\r\n            const actualData = data.payload;\r\n\r\n            if (actualData.length > 0) {\r\n                setSearchResults(actualData);\r\n                setModalResult(true);\r\n            } else {\r\n                setSearchResults([]);\r\n                setModalResult(false);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <NavbarContext.Provider\r\n            value={{\r\n                fetchData,\r\n                searchTerm,\r\n                setSearchTerm,\r\n                modalResult,\r\n                searchResults\r\n            }}\r\n        >\r\n            {props.children}\r\n        </NavbarContext.Provider>\r\n    );\r\n};\r\n\r\nexport default NavbarState;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC3B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAMa,KAAK,GAAGC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;EAE7C,MAAMC,SAAS,GAAG,MAAOC,WAAW,IAAK;IACrC,IAAI,CAACA,WAAW,EAAE;IAElB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,yCAAwCF,WAAY,EAAC,EAAE;QACjFG,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UAAE,eAAe,EAAG,UAASR,KAAM;QAAE;MAClD,CAAC,CAAC;MACF,MAAMS,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClC,MAAMC,UAAU,GAAGF,IAAI,CAACG,OAAO;MAE/B,IAAID,UAAU,CAACE,MAAM,GAAG,CAAC,EAAE;QACvBd,gBAAgB,CAACY,UAAU,CAAC;QAC5BhB,cAAc,CAAC,IAAI,CAAC;MACxB,CAAC,MAAM;QACHI,gBAAgB,CAAC,EAAE,CAAC;QACpBJ,cAAc,CAAC,KAAK,CAAC;MACzB;IACJ,CAAC,CAAC,OAAOmB,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EACJ,CAAC;EAED,oBACIxB,OAAA,CAACF,aAAa,CAAC4B,QAAQ;IACnBC,KAAK,EAAE;MACHd,SAAS;MACTP,UAAU;MACVC,aAAa;MACbH,WAAW;MACXI;IACJ,CAAE;IAAAoB,QAAA,EAED1B,KAAK,CAAC0B;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEjC,CAAC;AAAC7B,EAAA,CA1CIF,WAAW;AAAAgC,EAAA,GAAXhC,WAAW;AA4CjB,eAAeA,WAAW;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}